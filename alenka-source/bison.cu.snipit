
extern "C"
int alenka_JDBC(char *s) {
		//turn on debugging
		verbose = 1;

		YY_BUFFER_STATE bp;

        //Load the data dictionary
        load_col_data(data_dict, "data.dictionary");

        //initialize variables
        hash_seed = 100;
        scan_state = 0;
        statement_count = 0;
        clean_queues();

        //Read the SQL into internal buffers
        bp = yy_scan_string(s);
        yy_switch_to_buffer(bp);

        //Parse the query
        if (yyparse()) {
                cout << "SQL scan parse failed" << endl;
                return 1;
        };

        //Reset variables for execution
        scan_state = 1;
        load_vars();
        statement_count = 0;
        clean_queues();

        bp = yy_scan_string(s);
        yy_switch_to_buffer(bp);
        std::clock_t start1 = std::clock();

        //Excecute Query
        if (yyparse()) {
                cout << "SQL scan parse failed" << endl;
                return 1;
        }

        yy_delete_buffer(bp);

        if (verbose) {
                cout << "cycle time "
                                << ((std::clock() - start1) / (double) CLOCKS_PER_SEC) << endl;
        };

        return 0;
}
